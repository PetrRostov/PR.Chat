//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace PR.Chat.DAL.EF
{
    public partial class Channel
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual int OwnerID
        {
            get { return _ownerID; }
            set
            {
                if (_ownerID != value)
                {
                    if (Owner != null && Owner.Id != value)
                    {
                        Owner = null;
                    }
                    _ownerID = value;
                }
            }
        }
        private int _ownerID;
    
        public virtual string Subject
        {
            get;
            set;
        }
    
        public virtual bool IsHidden
        {
            get;
            set;
        }
    
        public virtual bool IsTemporary
        {
            get;
            set;
        }
    
        public virtual System.DateTime CreatedAt
        {
            get;
            set;
        }
    
        public virtual System.DateTime UpdatedAt
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Nick Owner
        {
            get { return _owner; }
            set
            {
                if (!ReferenceEquals(_owner, value))
                {
                    var previousValue = _owner;
                    _owner = value;
                    FixupOwner(previousValue);
                }
            }
        }
        private Nick _owner;
    
        public virtual ICollection<Nick> Nicks
        {
            get
            {
                if (_nicks == null)
                {
                    _nicks = new FixupCollection<Nick>();
                }
                return _nicks;
            }
            set
            {
                _nicks = value;
            }
        }
        private ICollection<Nick> _nicks;

        #endregion
        #region Association Fixup
    
        private void FixupOwner(Nick previousValue)
        {
            if (Owner != null)
            {
                if (OwnerID != Owner.Id)
                {
                    OwnerID = Owner.Id;
                }
            }
        }

        #endregion
    }
}
